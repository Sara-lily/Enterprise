<?xml version="1.0" encoding="UTF-8"?>
<!--
	- DispatcherServlet application context for MIIC's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:oxm="http://www.springframework.org/schema/oxm"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd
				http://www.springframework.org/schema/oxm 
				http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
				http://www.springframework.org/schema/mvc 
				http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!--
		- The controllers are autodetected POJOs labeled with the @Controller annotation.
	-->
	<context:component-scan base-package="edu.wm.cs420.project.web"/>

    <!-- the mvc resources tag does the magic -->
    <mvc:annotation-driven />
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/styles/**" location="/styles/"/>
    <mvc:resources mapping="/html/**" location="/html/"/>
    <mvc:resources mapping="/javascript/**" location="/javascript/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    

	<!--
		- The form-based controllers within this application provide @RequestMapping 
		- annotations at the type level for path mapping URLs and @RequestMapping 
		- at the method level for request type mappings (e.g., GET and POST). 
		- In contrast, ClinicController - which is not form-based - provides 
		- @RequestMapping only at the method level for path mapping URLs.
		-
		- DefaultAnnotationHandlerMapping is driven by these annotations and is 
		- enabled by default with Java 5+.
	-->
	

	<!--

		- This bean configures the 'prefix' and 'suffix' properties of
		- InternalResourceViewResolver, which resolves logical view names
		- returned by Controllers. For example, a logical view name of "instruments"
		- will be mapped to "/WEB-INF/jsp/instruments.jsp".
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/jsp/"
			p:suffix=".jsp" p:order="2"/>

<!-- Create a marshaller to convert objects to/from XML -->
	<oxm:jaxb2-marshaller id="marshaller">
		<oxm:class-to-be-bound name="gov.nasa.miic.common.ICPlan"/>
	</oxm:jaxb2-marshaller>
		
	<!--  Convert an HTTP request/response body to/from Objects  -->
 	<bean id="marshallingHttpMessageConverter" 
          class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
      <property name="marshaller" ref="marshaller" />
      <property name="unmarshaller" ref="marshaller" />
    </bean>
    
    <!--  Use ths HTTP/Object converter in MVC annotated methods  -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
          <list>
            <ref bean="marshallingHttpMessageConverter"/>
          </list>
        </property>
    </bean>

</beans>
